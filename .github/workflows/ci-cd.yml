name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Déclenche le workflow sur des pushes vers la branche main
  pull_request:
    branches:
      - main  # Déclenche le workflow sur des pull requests vers la branche main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Utilisation de Node.js 20

      - name: Install dependencies
        run: |
          npm install

      - name: Run Jasmine tests
        run: |
          npx jasmine

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: |
          docker build -t my-app:${{ github.sha }} .

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker tag my-app:${{ github.sha }} my-dockerhub-username/my-app:${{ github.sha }}
          docker push my-dockerhub-username/my-app:${{ github.sha }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no user@server 'docker pull my-dockerhub-username/my-app:${{ github.sha }} && docker run -d --name my-app -p 80:80 my-dockerhub-username/my-app:${{ github.sha }}'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
